#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app').app;
var debug = require('debug')('server:server');
var http = require('http');
var https = require('https');
var fs = require('fs');

/**
 * Create HTTP server.
 */

var server = http.createServer(app);
var server_ssl = https.createServer({
      key: fs.readFileSync('server/ssl/key.pem'),
      cert: fs.readFileSync('server/ssl/cert.pem')
}, app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(3003);
server.on('error', onError);
server.on('listening', onListening);

server_ssl.listen(3043);
server_ssl.on('error', onError);
server_ssl.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.info("Running on http://localhost:3003 and https://localhost:3043")
}
